<apex:page standardController="Operations_Request_Line_Item__c" extensions="OperationsRequestLineItemCtlExt" tabStyle="Operations_Request__c" id="orliPage">
	
	<apex:form id="orliForm">
		<apex:sectionHeader title="Operations Request: Line Items" subtitle="{!opReq.Name}" />
		<apex:pageMessages />
		
		<apex:pageBlock mode="detail" title="Opportunity Product Selection" rendered="{!!productView}">
			
			<apex:pageBlockButtons id="oppLineItemButtons">
				<apex:commandButton value="Products" action="{!toggleView}" disabled="{!fatalError || disableToggle}"/>
				<apex:commandButton value="Save" action="{!saveOppLineItems}" disabled="{!fatalError || !hasSelectedResults || noMore}"/>
				<apex:commandButton value="Save and More" action="{!saveAndMoreOppLineItems}" disabled="{!fatalError || !hasSelectedResults || noMore}"/>
				<apex:commandButton value="Cancel" action="{!cancel}" immediate="true"/>
			</apex:pageBlockButtons>
			
			<!-- Debug code to display what has been selected -->
			<!-- 
			<apex:pageBlockSection columns="1" title="Opportunity Line Items Selected" id="Selected_OLI">
				<apex:dataTable value="{!selectedOppLineItems}" var="s" cellspacing="10px">
					<apex:column headervalue="Opportunity Product" value="{!s.oppLineItem.Product2.Name}" />
					<apex:column headervalue="Selected" value="{!s.selected}" />
				</apex:dataTable>
			</apex:pageBlockSection>
			-->
			
            <apex:outputPanel style="font-size: 85%; padding: 0px 0px 0px 10px;" >
            	<apex:commandLink action="{!firstSet}" value="First" rerender="orliForm"/>
            	&nbsp;
            	<apex:commandLink action="{!previousSet}" value="Previous" rerender="orliForm"/>
            	&nbsp;<apex:outputText value="{!pageNumber} of {!totalPages}"/>&nbsp;&nbsp;
            	<apex:commandLink action="{!nextSet}" value="Next" rerender="orliForm"/>
            	&nbsp;
            	<apex:commandLink action="{!lastSet}" value="Last" rerender="orliForm"/>
            	<apex:outputPanel style="padding: 0px 0px 0px 30px;">
            		<apex:outputLabel value="Rows Per Page" for="rowsPerPageField"/>
            		&nbsp;&nbsp;
            		<apex:inputText value="{!RowsPerPage}" id="rowsPerPageField" style="width:20px;"/>
            		&nbsp;&nbsp;
            		<apex:commandButton action="{!rowsPerPageChanged}" value="Refresh" rerender="orliForm"/>
            	</apex:outputPanel>
            </apex:outputPanel>
			
			<apex:pageBlockSection columns="1" >
				
				<apex:pageBlockTable value="{!OppLineItems}" var="s" id="oppLineItemTable">
					<apex:column >
						<apex:facet name="header">
							<apex:inputCheckbox >
								<apex:actionSupport event="onclick" action="{!getSelected}" onsubmit="checkAll(this)" rerender="orliForm,oppLineItemTable,Selected_OLI"/>
							</apex:inputCheckbox>
						</apex:facet>
						<apex:inputCheckbox value="{!s.selected}" id="checkedone">
							<apex:actionSupport event="onclick" action="{!getSelected}" rerender="orliForm,oppLineItemTable,Selected_OLI"/>
						</apex:inputCheckbox>
					</apex:column>
                	
                	<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="SKU" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Product2.Name"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Product2.Name'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputLink value="/{!s.oppLineItem.Product2Id}" target="_blank">{!s.oppLineItem.Product2.Name}</apex:outputLink>
					</apex:column>
                	
					<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="Product Name" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Product2.Actual_Product_Name__c"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Product2.Actual_Product_Name__c'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputField value="{!s.oppLineItem.Product2.Actual_Product_Name__c}" />
					</apex:column>
					
                	<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="Qty" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Quantity"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Quantity'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputField value="{!s.oppLineItem.Quantity}" />
					</apex:column>
                	
                	<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="Ship Via" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Product_Ship_Via__c"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Product_Ship_Via__c'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputField value="{!s.oppLineItem.Product_Ship_Via__c}" />
					</apex:column>
                	
                	<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="Fulfillment" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Fulfillment_Method__c"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Fulfillment_Method__c'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputField value="{!s.oppLineItem.Fulfillment_Method__c}" />
					</apex:column>
                	
                	<apex:column >
						<apex:facet name="header">
							<apex:commandLink value="Notes" action="{!sortOLIcolumn}" rerender="orliForm">
								<apex:param name="columnSort" value="Notes__c"/>
								<apex:outputPanel rendered="{!oliColumnName == 'Notes__c'}" >
									<apex:outputPanel rendered="{!sortASC}" >
										&nbsp;&uarr;
									</apex:outputPanel>
									<apex:outputPanel rendered="{!!sortASC}" >
										&nbsp;&darr;
									</apex:outputPanel>
								</apex:outputPanel>
							</apex:commandLink>
						</apex:facet>
						<apex:outputField value="{!s.oppLineItem.Notes__c}" />
					</apex:column>
                	
                	<apex:column headerValue="Opportunity Product" >
                    	<apex:outputLink value="/{!s.oppLineItem.Id}" target="_blank">{!s.oppLineItem.Product2.Name}</apex:outputLink>
                	</apex:column>
            	</apex:pageBlockTable>
			</apex:pageBlockSection>
			
            <apex:outputPanel style="font-size: 85%; padding: 0px 0px 0px 10px;" >
            	<apex:commandLink action="{!firstSet}" value="First" rerender="orliForm"/>
            	&nbsp;
            	<apex:commandLink action="{!previousSet}" value="Previous" rerender="orliForm"/>
            	&nbsp;<apex:outputText value="{!pageNumber} of {!totalPages}"/>&nbsp;&nbsp;
            	<apex:commandLink action="{!nextSet}" value="Next" rerender="orliForm"/>
            	&nbsp;
            	<apex:commandLink action="{!lastSet}" value="Last" rerender="orliForm"/>
            </apex:outputPanel>
			
		</apex:pageBlock>
		
		<apex:pageBlock mode="detail" title="Product Selection" rendered="{!productView}" id="productBlock">
			
			<apex:pageBlockButtons >
				<apex:commandButton value="Opportunity Products" action="{!toggleView}" disabled="{!fatalError || !isOpportunity || disableToggle}"/>
				<apex:commandButton value="Save" action="{!saveProducts}" disabled="{!fatalError || !hasSelectedResults || noMore}"/>
				<apex:commandButton value="Save and More" action="{!saveAndMoreProducts}" disabled="{!fatalError || !hasSelectedResults || noMore}"/>
				<apex:commandButton value="Cancel" action="{!cancel}" immediate="true"/>
				<apex:commandButton value="Remove All" action="{!removeAllProducts}" disabled="{!hasSelectedResults == false}" reRender="productBlock,selectedProducts,searchResults"/>
			</apex:pageBlockButtons>
		
			<!-- THIS IS THE SELECTED PRODUCT BLOCK -->
			<apex:outputPanel id="selectedProducts">
				
				<apex:pageBlockTable id="addedProducts" rendered="true" value="{!newProductMap}" var="np">
					<apex:column headerValue="SKU" >
						<apex:outputLink value="/{!newProductMap[np].Id}" target="_blank">{!newProductMap[np].Name}</apex:outputLink>
					</apex:column>
					<apex:column headerValue="Product Name" >
						<apex:outputField value="{!newProductMap[np].Actual_Product_Name__c}" />
					</apex:column>
					<apex:column headerValue="Description" >
						<apex:outputField value="{!newProductMap[np].ECommerce_Display_Name__c}"/>
					</apex:column>
					<apex:column headerValue="{!$ObjectType.Product2.Fields.Total_Quantity_On_Hand__c.Label}" >
						<apex:outputField value="{!newProductMap[np].Total_Quantity_On_Hand__c}"/>
					</apex:column>
					<apex:column headerValue="{!$ObjectType.Product2.Fields.IsActive.Label}" >
						<apex:outputField value="{!newProductMap[np].IsActive}"/>
					</apex:column>
					
					<apex:column >
						<!-- command button in a column -->
						<apex:commandButton value="Remove" action="{!removeOneProduct}" reRender="productBlock,selectedProducts,searchResults" immediate="true">
							<!-- again we use apex:param to be able to tell the controller which row we are working with -->
							<apex:param value="{!newProductMap[np].Id}" assignTo="{!toSelect}" name="toSelect"/>
						</apex:commandButton>
					</apex:column>
				</apex:pageBlockTable>
				
			</apex:outputPanel>
		
		</apex:pageBlock>
		
		<!-- THIS IS THE SEARCH BLOCK -->
		<apex:pageBlock rendered="{!productView}">
			<apex:outputPanel styleClass="search">
				Search for {!$ObjectType.Product2.LabelPlural}:&nbsp;&nbsp;
			</apex:outputPanel>
			
			<apex:actionRegion renderRegionOnly="false" immediate="true">
				<apex:actionFunction name="fetchResults" action="{!searchProducts}" reRender="searchResults,addAllProductsButton" status="searchStatus"/>
				<!-- Here we invoke the scripting to get the 'no button' search bar to work -->
				<apex:inputText value="{!productSearchString}" onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" style="width:600px" rendered="true"/>
				<apex:actionFunction name="fetchResults1" action="{!searchProducts}" reRender="searchResults,addAllProductsButton" status="searchStatus"/>
				
				<apex:outputPanel styleClass="search">
				</apex:outputPanel>
				
				&nbsp;

				<apex:outputPanel id="addAllProductsButton">
					<apex:commandButton action="{!addAllProducts}" disabled="{!hasSearchResults == false}" value="Add All" reRender="productBlock,selectedProducts,searchResults"/>
				</apex:outputPanel>
				
				&nbsp;&nbsp;
				
				<!-- actionStatus component makes it easy to let the user know when a search is underway -->
				<i>
					<apex:actionStatus id="searchStatus" startText="searching..." stopText=" "/>
				</i>
			</apex:actionRegion>
			
			<br/>
			<br/>
			
			<apex:outputPanel id="searchResults" >
				
				<apex:pageBlockTable value="{!productMap}" var="p">
					
					<apex:column headerValue="SKU" >
						<apex:outputLink value="/{!productMap[p].Id}" target="_blank">{!productMap[p].Name}</apex:outputLink>
					</apex:column>
					<apex:column headerValue="Product Name" >
						<apex:outputField value="{!productMap[p].Actual_Product_Name__c}" />
					</apex:column>
					<apex:column headerValue="Description" >
						<apex:outputField value="{!productMap[p].ECommerce_Display_Name__c}"/>
					</apex:column>
					<apex:column headerValue="{!$ObjectType.Product2.Fields.Total_Quantity_On_Hand__c.Label}" >
						<apex:outputField value="{!productMap[p].Total_Quantity_On_Hand__c}"/>
					</apex:column>
					<apex:column headerValue="{!$ObjectType.Product2.Fields.IsActive.Label}" >
						<apex:outputField value="{!productMap[p].IsActive}"/>
					</apex:column>
					
					<apex:column >
						<apex:commandButton value="Select" action="{!addOneProduct}" reRender="productBlock,selectedProducts,searchResults" immediate="true">
							<apex:param value="{!productMap[p].Id}" assignTo="{!toSelect}" name="toSelect"/>
						</apex:commandButton>
					</apex:column>
					
				</apex:pageBlockTable>
				
				<!-- We put up a warning if results exceed 100 rows -->
				<apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
					<br/>
					Your search returned over 100 results, use a more specific search string if you do not see the desired product.
					<br/>
				</apex:outputPanel>
				
			</apex:outputPanel>
			
		</apex:pageBlock>
		
	</apex:form>
	
	<script>
        function checkAll(cb) {
            var inputElem = document.getElementsByTagName("input");
            for(var i=0; i<inputElem.length; i++) {
                if(inputElem[i].id.indexOf("checkedone")!=-1)
                    inputElem[i].checked = cb.checked;
            }
        }
        
        // This script assists the product search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:
        var waitTime = 1;
        var countDown = waitTime+1;
        var started = false;

        function resetTimer(){

            countDown=waitTime+1;

            if(started==false){
                started=true;
                runCountDown();
            }
        }

        function runCountDown(){

            countDown--;

            if(countDown<=0){
                fetchResults();
                started=false;
            }
            else{
                window.setTimeout(runCountDown,1000);
            }
        }   
    </script>
	
</apex:page>