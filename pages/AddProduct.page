<apex:page standardController="Opportunity" extensions="OpportunityExtension" >
    <script type='text/javascript'>

        // This script assists the search bar functionality
        // It will execute a search only after the user has stopped typing for more than 1 second
        // To raise the time between when the user stops typing and the search, edit the following variable:

        var waitTime = 1;
        var countDown = waitTime+1;
        var started = false;

        function resetTimer(){

            countDown=waitTime+1;

            if(started==false){
                started=true;
                runCountDown();
            }
        }

        function runCountDown(){

            countDown--;

            if(countDown<=0){
                fetchResults();
                started=false;
            }
            else{
                window.setTimeout(runCountDown,1000);
            }
        }
        // Script to focus the element
        var elementFocused = null;
        function getFocus()
        {
            elementFocused = document.activeElement;
        }
        function setFocus()
        {
            if(elementFocused!=null)
            {
                document.getElementById(elementFocused.id).focus();
            }
        }
        
        function saveNew(negMargin) {
        	var r;
        	
        	if (negMargin == true) {
        		r = confirm('One or more Opportunity Line Items have a negative margin. Are you sure you want to continue?');
        		if (r == true) {
        			applyNew();
        		}
        	} else {
        		applyNew();
        	}
        }
        
        function saveNewAndAddMore(negMargin) {
        	var r;
        	
        	if (negMargin == true) {
        		r = confirm('One or more Opportunity Line Items have a negative margin. Are you sure you want to continue?');
        		if (r == true) {
        			applyNewAndAddMore();
        		}
        	} else {
        		applyNewAndAddMore();
        	}
        }

    </script>

    <apex:form id="formId">
    	
    	<apex:actionfunction name="applyNew" action="{!insertNewOLI}" />
    	<apex:actionfunction name="applyNewAndAddMore" action="{!saveAndAddMore}" />
    	
        <apex:pageBlock title="Opportunity Add Products" id="mainBlock">
            <apex:pageBlockButtons >
                <apex:commandButton value="Save" rerender="mainBlock" disabled="{!(hasOLIChanged == false || hasErrors == true)}" onclick="saveNew({!NewNegativeMargin});return false;" />
                <apex:commandButton value="Save & Add More" rerender="mainBlock" disabled="{!(hasOLIChanged == false || hasErrors == true)}" onclick="saveNewAndAddMore({!NewNegativeMargin});return false;" />
                <!-- 
                <apex:commandButton action="{!insertNewOLI}" value="Save" rerender="mainBlock" disabled="{!(hasOLIChanged == false || hasErrors == true)}"/>
                <apex:commandButton action="{!saveAndAddMore}" value="Save & Add More" rerender="mainBlock" disabled="{!(hasOLIChanged == false || hasErrors == true)}"/>
                -->
                <apex:commandButton action="{!oliCancelAddNew}" value="Cancel" immediate="true"/>
            </apex:pageBlockButtons>

            <!-- ERROR CONDITION -->
            <apex:pageBlockSection title="Error(s) have been found..." rendered="{!(hasErrors == true)}" collapsible="false" columns="1">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Error Description" for="errors"/>
                    <apex:outputPanel >
                        <apex:outputText value="{!errorMessage}" id="errors" style="color: red; width:100%"/>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
            </apex:pageBlockSection>

            <!-- THIS IS THE EDITABLE BLOCK FOR USE IN EDIT MODE -->
<!--            <apex:pageBlockTable id="addedProducts" rendered="{!showAddedProducts}" value="{!newOpportunityLineItems}" var="item">-->
            <apex:pageBlockTable id="addedProducts" rendered="true" value="{!newOpportunityLineItems}" var="item">
                <apex:column headerValue="Product Name">
<!--                     <apex:outputField value="{!item.oli.Opportunity_Product__c}">-->
                    <apex:outputText value="{!item.ProductName}">
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Quantity">
                    <apex:inputField value="{!item.oli.Quantity}" style="width :50px;" id="quantityId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!item.quantityChanged}" reRender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Direct Original Price">
                    <apex:outputText value="{0, number, 0.00}">
                        <apex:param value="{!item.directOriginalPrice}"/>
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Direct Current Price">
                    <apex:outputText value="{0, number, 0.00}">
                        <apex:param value="{!item.directCurrentPrice}"/>
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Member Price">
                    <apex:outputText value="{0, number, 0.00}">
                        <apex:param value="{!item.pbe.Product2.Member_Price__c}"/>
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Contract Price">
                    <apex:inputField value="{!item.oli.UnitPrice}" style="width :60px;" id="contractPriceId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!item.unitPriceChanged}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Total Contract Price">
                    <apex:outputText value="{!item.totalContractPrice}">
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Discount">
                    <apex:inputField value="{!item.oli.Discount_Percent__c}" style="width :50px;" id="percentDiscountedId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!item.discountPctChanged}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Margin">
                    <apex:inputField value="{!item.oli.Margin__c}" style="width :50px;" id="marginId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!item.marginChanged}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Ship Via">
                    <apex:outputText value="{!item.productShipVia}">
                    </apex:outputText>
                </apex:column>
                <apex:column headerValue="Expected Delivery">
                    <apex:inputField value="{!item.oli.Delivery_Date__c}" style="width :100px;" id="expDelDateId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!madeOLIChange}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Fulfillment">
                    <apex:inputField value="{!item.oli.Fulfillment_Method__c}" style="width :100px;" id="fulfMethId" required="true">
                        <!-- 
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!madeOLIChange}" rerender="mainBlock" oncomplete="setFocus()"/>
                        -->
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!item.fulFillmentChanged}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Notes">
                    <apex:inputField value="{!item.oli.Notes__c}" style="width :100px;" id="notesId">
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!madeOLIChange}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Customer Loc">
                    <apex:inputField value="{!item.oli.Customer_Location__c}" style="width :100px;" >
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!madeOLIChange}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
                <apex:column headerValue="Customer Spec">
                    <apex:inputField value="{!item.oli.Customer_Spec__c}" style="width :100px;" >
                        <apex:actionSupport event="onchange" onbeforedomupdate="getFocus()" action="{!madeOLIChange}" rerender="mainBlock" oncomplete="setFocus()"/>
                    </apex:inputField>
                </apex:column>
            </apex:pageBlockTable>
        </apex:pageBlock>

        <!-- THIS IS THE SEARCH BLOCK -->
        <apex:pageBlock >
            <apex:outputPanel styleClass="search">
                Search for {!$ObjectType.Product2.LabelPlural}:
            </apex:outputPanel>

            <apex:actionRegion renderRegionOnly="false" immediate="true">
                <apex:actionFunction name="fetchResults" action="{!updateAvailableList}" reRender="searchResults,addAllProductsButton" status="searchStatus"/>
                    <!-- Here we invoke the scripting to get the 'no button' search bar to work -->
                    <apex:inputText value="{!searchString}" onkeydown="if(event.keyCode==13){this.blur();}else{resetTimer();}" style="width:600px" rendered="true"/>
                <apex:actionFunction name="fetchResults1" action="{!updateAvailableList}" reRender="searchResults,addAllProductsButton" status="searchStatus"/>

                <apex:outputPanel styleClass="search">
                </apex:outputPanel>

                    <apex:outputPanel id="addAllProductsButton">
                        <apex:commandButton action="{!addAllProducts}" disabled="{!hasSearchResults == false}" value="Add All Selected" reRender="mainBlock,searchResults"/>
                    </apex:outputPanel>
                    
                    &nbsp;&nbsp;
                    <i>
                    <!-- actionStatus component makes it easy to let the user know when a search is underway -->
                    <apex:actionStatus id="searchStatus" startText="searching..." stopText=" "/>
                    </i>
                    </apex:actionRegion>

                <br/>

                <apex:outputPanel id="searchResults">

                    <apex:pageBlockTable value="{!AvailableProducts}" var="a">

                    <!-- apex:column width="25px">
                    <apex:inputcheckbox value="{!checked}"/>
                    </apex:column-->

                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Name.Label}" value="{!a.Product2.Name}" />
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Actual_Product_Name__c.Label}" value="{!a.Product2.Actual_Product_Name__c}" />
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Family.Label}" value="{!a.Product2.Family}"/>
                        <apex:column headerValue="{!$ObjectType.Product2.Fields.Description.Label}" value="{!a.Product2.Description}"/>

                        <apex:column >
                            <!-- command button in a column -->
                            <apex:commandButton value="Select" action="{!addOneProduct}" reRender="mainBlock,searchResults" immediate="true">
                                <!-- again we use apex:param to be able to tell the controller which row we are working with -->
                                <apex:param value="{!a.Id}" assignTo="{!toSelect}" name="toSelect"/>
                            </apex:commandButton>
                        </apex:column>

                    </apex:pageBlockTable>

                    <!-- We put up a warning if results exceed 100 rows -->
                    <apex:outputPanel styleClass="fyi" rendered="{!overLimit}">
                        <br/>
                        Your search returned over 100 results, use a more specific search string if you do not see the desired {!$ObjectType.Product2.Label}.
                        <br/>
                    </apex:outputPanel>

                </apex:outputPanel>

            </apex:pageBlock>
    </apex:form>
</apex:page>